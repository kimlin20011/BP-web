<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Container Data</title>
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
    <link rel="stylesheet" href="bower_components/bootstrap/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="bower_components/font-awesome/css/font-awesome.min.css">
    <link rel="stylesheet" href="bower_components/Ionicons/css/ionicons.min.css">
    <link rel="stylesheet" href="dist/css/AdminLTE.min.css">
    <link rel="stylesheet" href="dist/css/skins/_all-skins.min.css">
    <script type="text/javascript" src="javascripts/browserMqtt.js"></script>
    <script type="text/javascript" src="javascripts/jquery-3.2.1.min.js"></script>
    <!--選取範圍日期用套件-->
    <script type="text/javascript" src="bower_components/moment/moment.js"></script>
    <script type="text/javascript" src="bower_components/daterangepicker/daterangepicker.js"></script>
    <link rel="stylesheet" type="text/css" href="bower_components/daterangepicker/daterangepicker.css"/>
    <!--呈現資料表套件-->
    <script type="text/javascript" src="bower_components/DataTables/datatables.min.js"></script>
    <script type="text/javascript" src="bower_components/DataTables/dataTables.responsive.min.js"></script>
    <script type="text/javascript" src="bower_components/DataTables/dataTables.rowReorder.min.js"></script>
    <link rel="stylesheet" type="text/css" href="bower_components/DataTables/datatables.min.css"/>
    <link rel="stylesheet" type="text/css" href="bower_components/DataTables/responsive.dataTables.min.css"/>
    <link rel="stylesheet" type="text/css" href="bower_components/DataTables/rowReorder.dataTables.min.css"/>
    <!--呈現圖表套件-->
    <script type="text/javascript" src="bower_components/chart/Chart.js"></script>
    <!--sweetalert-->
    <script type="text/javascript" src="bower_components/sweetalert/sweetalert.min.js"></script>

    <link rel="stylesheet"
          href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,600,700,300italic,400italic,600italic">

    <style>
        /*使得在 google map 移動到標記的點上 顯示的框框沒有Ｘ選項 美化用*/
        .gm-style-iw + div {
            display: none;
        }

        .gm-style-iw {
            text-align: center;
        }
    </style>


</head>

<body class="hold-transition skin-blue layout-top-nav">
<div class="wrapper">
    <!--網頁最頂端navbar部分-->
    <header class="main-header">
        <nav class="navbar navbar-static-top">
            <div class="container">
                <div class="navbar-header">
                    <a href="/" class="navbar-brand"><b>Container</b>Data</a>
                    <!--操縱navbar的RWD效果-->
                    <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar-collapse">
                        <i class="fa fa-bars"></i>
                    </button>
                </div>
                <div class="navbar-collapse collapse" id="navbar-collapse">
                    <ul hidden id="hiddenid" class="nav navbar-nav">
                        <li><a href="#" class="navbar">Device ID: <%= id%></a></li>
                        <li><a class="navbar" onclick="triggerStart(`<%= id%>`)">Start</a></li>
                        <li><a class="navbar" onclick="triggerStop(`<%= id%>`)">Stop</a></li>
                    </ul>

                    <input hidden id="deviceid" name="id" value="<%= id%>">
                    <ul class="nav navbar-nav navbar-right">
                        <li ><a href="/registerid" class="navbar">Register ID</a></li>
                        <li ><a href="/manager" class="navbar">Manager</a></li>
                    </ul>
                    <!--搜尋device id功能-->
                    <form action="/container" method="get" class="navbar-form navbar-right" >
                        <div class="input-group">
                            <input type="text" name="id" class="form-control" id="navbar-search-input"
                                   placeholder="device-id">
                            <span class="input-group-btn">
                            <button type="submit"  id="search-btn" class="btn btn-flat"><i class="fa fa-search"></i>
                            </button>
                            </span>
                        </div>
                    </form>
                </div>
            </div>
        </nav>
    </header>

    <div class="content-wrapper">
        <div class="container">
            <section class="content-header">
            </section>
            <!--查詢區時間區間功能-->
            <div class="box box-primary">
                <div class="box-header">
                    <h3 class="box-title">查詢時間區間</h3>
                </div>
                <div class="box-body">
                    <div class="form-group">
                        <form action="/container" method="get" >
                            <div class="input-group">
                                <div class="input-group-addon">
                                    <i class="fa fa-clock-o"></i>
                                </div>
                                <input hidden name="id" value="<%= id%>">
                                <input type="text" class="form-control pull-right" id="timeinterval" name="timeinterval">
                                <span class="input-group-btn">
                                <button type="submit"  id="" class="btn btn-flat"
                                        style="background-color:#3c8dbc; color:#ffffff"><i class="fa fa-search"></i>
                                </button>
                              </span>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            <!--運送路徑資訊功能-->
            <div class="box box-success">
                <div class="box-header">
                    <h3 class="box-title">運送路徑資訊</h3>
                </div>
                <div id="map" style="height: 433px; margin: 0px; padding: 0px;" class="box-body"></div>
            </div>
            <!--溫濕度圖表功能-->
            <div class="box box-warning">
                <div class="box-header with-border">
                    <h3 class="box-title">溫濕度圖表</h3>
                </div>
                <div class="box-body">
                    <div class="chart">
                        <canvas id="areaChart" style="height: 400px; width: 675px;" ></canvas>
                    </div>
                </div>
            </div>
            <!--資料列表功能-->
            <div class="box box-danger">
                <div class="box-header">
                    <h3 class="box-title">資料列表</h3>
                </div>
                <table id="datatable" class="display" width="100%"></table>
            </div>
        </div>
    </div>
</div>

<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAprpUrbF7bXWIzEKLF0s8sRMi4lqs7uY8&callback=initMap">
</script>
<script>


    let dataAPI = 'http://140.119.163.196:3000';
    var marker;
    var map;
    var table;

    function initMap() {
        var myLatLng = {lat: 24.987088, lng: 121.573474};

        map = new google.maps.Map(document.getElementById('map'), {
            zoom: 20,
            center: myLatLng
        });

    }

    // 製造跳動效果
    function toggleBounce(marker) {
        if (marker.getAnimation() !== null) {
            marker.setAnimation(null);
        } else {
            marker.setAnimation(google.maps.Animation.BOUNCE);
        }
    }
    // 設置maker
    function setMarkers(_dataSet) {
        for (var i = 0; i < _dataSet.length; i++) {
            doMarkerSetTimeout(i,_dataSet);
        }
    }
    // 慢慢跳出maker
    let iNumber = 1;
    function doMarkerSetTimeout(i,_dataSet) {
        setTimeout(function () {
            var timestamp = _dataSet[i][1]
            var lat = _dataSet[i][2]
            var long = _dataSet[i][3]

            latlngset = new google.maps.LatLng(lat, long);

            var marker = new google.maps.Marker({
                map: map,
                title: timestamp,
                position: latlngset,
                animation: google.maps.Animation.DROP,
            });
            map.setCenter(marker.getPosition())

            var content = `</h3> Number: ${iNumber} <br>${timestamp} </h3>`;
            iNumber++;

            var infowindow = new google.maps.InfoWindow()

            google.maps.event.addListener(marker, 'mouseover', (function (marker, content, infowindow) {
                return function () {
                    infowindow.setContent(content);
                    infowindow.open(map, marker);
                    toggleBounce(marker)
                };
            })(marker, content, infowindow));

            google.maps.event.addListener(marker, 'mouseout', (function (marker, content, infowindow) {
                return function () {
                    infowindow.close(map, marker);
                    toggleBounce(marker)
                };
            })(marker, content, infowindow));
        }, i * 100);
    }

    // 表單設置
    var chartDataOption = {
        type: 'line',
        data:{
            labels: [],
            datasets: [{
                label: 'temperature',
                yAxisID: 'temperature',
                fill: false,
                // backgroundColor: 'rgba(255, 127, 80,0.3)',
                borderColor: "rgba(255, 127, 80,0.5)",
                data: []

            }, {
                label: 'humidity',
                yAxisID: 'humidity',
                fill: false,
                // backgroundColor: 'rgba(30, 144, 255,0.3)',
                borderColor: 'rgba(30, 144, 255,0.5)',
                data: []

            }],
        },
        options : {
            responsive: true,
            maintainAspectRatio:false,
            title: {
                display: true,
                text: 'Chart.js Line Chart'
            },
            tooltips: {
                mode: 'index',
                intersect: false,
            },
            hover: {
                mode: 'nearest',
                intersect: true
            },
            scales: {
                xAxes: [{
                    ticks: {
                        maxRotation: 0
                    }
                }],
                yAxes: [{
                    id: 'temperature',
                    type: 'linear',
                    position: 'left',
                    ticks: {
                        max: 36,
                        min: 20
                    }
                }, {
                    id: 'humidity',
                    type: 'linear',
                    position: 'right',
                    ticks: {
                        max: 50,
                        min: 30
                    }
                }]
            }
        }
    };

    // 顯示暫時選擇的日期
    $(function () {
        $('input[name="timeinterval"]').daterangepicker({
            timePicker: true,
            startDate: moment().startOf('hour'),
            endDate: moment().startOf('hour').add(16, 'hour'),
            locale: {
                format: 'YYYY-MM-DD HH:mm:ss'
            }
        });
        console.log($("#timeinterval").val().toString());
        console.log($("#deviceid").val());

        // 如果有id在navbar上顯示
        if( $("#deviceid").val() != "" &&  $("#deviceid").val() != undefined ){
            $("#hiddenid").show();
        }
    });

    $(function () {
        initMap()
        var dataSet = [];
        var labels = [];
        var temperatures = [];
        var humiditys = [];

        var tmpdataSet = [];
        var tmplabel = [];
        var tmptemperature ;
        var tmphumidity ;



        //將資料用ajax抓取後資料動態顯示在前端
        $.getJSON(dataAPI+"/api/container/data",{id:$("#deviceid").val()}, function (data) {

            console.log(data);
            for (var k in data) {
                // console.log(k, data[k]);
                dataSet.push([data[k].pi_mac, new Date(data[k].timestamp).toLocaleString(), Number(data[k].lat), Number(data[k].lng), Number(data[k].temperature), Number(data[k].humidity)]);
                labels.push([new Date(data[k].timestamp).toLocaleString('tw', { year:'numeric',month: 'short',day:'numeric'}),new Date(data[k].timestamp).toLocaleString('tw', { hour:'numeric', minute:'numeric', second:'numeric'})]);
                temperatures.push(Number(data[k].temperature));
                humiditys.push(Number(data[k].humidity));
            }
            // console.log(dataSet)

            $(document).ready(function () {
                table = $('#datatable').DataTable({
                    data: dataSet,
                    rowReorder: {
                        selector: 'td:nth-child(2)'
                    },
                    responsive: true,
                    columns: [
                        {title: "pi_mac"},
                        {title: "timestamp"},
                        {title: "lat"},
                        {title: "lng"},
                        {title: "temperature"},
                        {title: "humidity"}
                    ]
                });
                table.order( [ 1, 'desc' ] ).draw();
            });

            setMarkers(dataSet)

            chartDataOption.options.scales.yAxes[0].ticks.max = countMaxT(temperatures)+3;
            chartDataOption.options.scales.yAxes[0].ticks.min = countMinT(temperatures)-3;
            chartDataOption.options.scales.yAxes[1].ticks.max = countMaxH(humiditys)+3;
            chartDataOption.options.scales.yAxes[1].ticks.min = countMinH(humiditys)-3;


            chartDataOption.data.labels = labels;
            chartDataOption.data.datasets[0].data = temperatures;
            chartDataOption.data.datasets[1].data = humiditys;

            var ChartCanvas = $('#areaChart').get(0).getContext('2d')

            window.myLine = new Chart(ChartCanvas,chartDataOption);
        })

        var ii=0;

        //檢查是否有新的資料到資料庫裡
        setInterval(function () {
            // console.table(dataSet)
            $.getJSON(dataAPI+"/api/container/data",{id:$("#deviceid").val()}, function (data) {
                // console.log(data);

                for (var v of data){
                    var haveequal=0
                    // console.log(v.timestamp);
                    for(var vv of dataSet){
                        // console.log(vv[1]);
                        if( new Date(v.timestamp).toLocaleString() === vv[1] ){
                            haveequal = 1;
                        }
                    }
                    if(haveequal === 0) {
                        console.log(ii++);
                        console.log(new Date(v.timestamp).toLocaleString());
                        console.log(v);

                        tmpdataSet = [[v.pi_mac, new Date(v.timestamp).toLocaleString(), Number(v.lat), Number(v.lng), Number(v.temperature), Number(v.humidity)]];
                        tmplabel = [new Date(v.timestamp).toLocaleString('tw', { year:'numeric',month: 'short',day:'numeric'}),new Date(v.timestamp).toLocaleString('tw', { hour:'numeric', minute:'numeric', second:'numeric'})];
                        tmptemperature = Number(v.temperature);
                        tmphumidity = Number(v.humidity);

                        setMarkers(tmpdataSet)

                        chartDataOption.options.scales.yAxes[0].ticks.max = countMaxT([tmptemperature])+3;
                        chartDataOption.options.scales.yAxes[0].ticks.min = countMinT([tmptemperature])-3;
                        chartDataOption.options.scales.yAxes[1].ticks.max = countMaxH([tmphumidity])+3;
                        chartDataOption.options.scales.yAxes[1].ticks.min = countMinH([tmphumidity])-3;

                        chartDataOption.data.labels.push(tmplabel);
                        chartDataOption.data.datasets[0].data.push(tmptemperature);
                        chartDataOption.data.datasets[1].data.push(tmphumidity);

                        window.myLine.update();

                        table.row.add(tmpdataSet[0]).draw();

                        dataSet.push(tmpdataSet[0]);
                        labels.push(tmplabel);
                        temperatures.push(tmptemperature);
                        humiditys.push(tmphumidity);
                    }
                }
            });
        },5000)
    });

    //動態調整溫濕度圖表參數
    let maxT = 0;
    let minT = 50;
    let maxH = 0;
    let minH = 50;

    function countMaxT(temperatures){
        for(t of temperatures){
            if (t > maxT)maxT = t;
        }
        return Number(maxT);
    }
    function countMinT(temperatures){
        for(t of temperatures){
            if (t < minT)minT = t;
        }
        return Number(minT);
    }
    function countMaxH(humiditys){
        for(h of humiditys){
            if (h > maxH)maxH = h;
        }
        return Number(maxH);
    }
    function countMinH(humiditys){
        for(h of humiditys){
            if (h < minH)minH = h;
        }
        return Number(minH);
    }


    //啟動裝置開始記錄上傳資料 以及 開始雲端上將鏈上資料抓到資料庫裡
    function triggerStart(id) {
        console.log(id);

        $.getJSON(dataAPI + "/api/container",{id:id}, function (data) {
            console.log(data);
            let address = data.Contract_Address;
            console.log(address);

            swal({
                title: "啟動container",
                text: "請輸入container的IP位置",
                content: "input",
                button: {
                    text: "啟動!",
                    closeModal: false,
                }

            }).then((inputValue) => {
                if (inputValue === false) return false;

                if (inputValue === "") {
                    swal.showInputError("請輸入需啟動container的IP");
                    return false
                }

		let client = mqtt.connect('ws://140.119.163.195:10000') // you add a ws:// url here
                client.subscribe("itriAddress/response");
                client.on("message", function (topic, msg) {
                        let data=JSON.parse(msg.toString());
                        if(data.ip===inputValue && data.status ==="start"){
                                swal("container已啟動&監聽啟用", msg.toString(), "success"); 
                                client.end();  
	                        $.ajax({
        	                    type: "post",
                	            url: dataAPI + '/startWatch',
                        	    async: true,
	                            data: JSON.stringify({
        	                        idAddress: address
                	            }),
                        	    contentType: "application/json; charset=utf-8",
	                            dataType: "json",
        	                    success: function (data) {
	
        	                        swal("container已啟動&監聽啟用", data.status, "success")
                	            }
                	        });
			}
                });
                let obj={};
                obj.ip=inputValue+":start";
                obj.idAddress=address;
                client.publish("itriAddress/request",JSON.stringify(obj));


                $.ajax({
                    type: "post",
                    url: inputValue + '/start',
                    async: true,
                    data: JSON.stringify({
                        idAddress: address
                    }),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        swal(inputValue + "的container已啟動", data.status, "success");

                        $.ajax({
                            type: "post",
                            url: dataAPI + '/startWatch',
                            async: true,
                            data: JSON.stringify({
                                idAddress: address
                            }),
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (data) {

                                swal("container已啟動&監聽啟用", data.status, "success")
                            }
                        });
                    }
                });
            });
        });

    }

    //關閉裝置開始記錄上傳資料 以及 結束雲端上將鏈上資料抓到資料庫裡
    function triggerStop(id) {

        console.log(id);

        $.getJSON(dataAPI + "/api/container",{id:id}, function (data) {
            console.log(data);
            let address = data.Contract_Address;

            swal({
                title: "關閉container",
                text: "請輸入container的IP位置",
                content: "input",
                button: {
                    text: "停止!",
                    closeModal: false,
                }
            }).then((inputValue) => {
                if (inputValue === false) return false;

                if (inputValue === "") {
                    swal.showInputError("請輸入需關閉container的IP");
                    return false
                }
		   let client = mqtt.connect('ws://140.119.163.195:10000') // you add a ws:// url here
                    let obj={};
                    obj.ip=inputValue+":stop";
                    obj.idAddress=address;

                    client.subscribe("itriAddress/response");
                    client.on("message", function (topic, msg) {
                        let data=JSON.parse(msg.toString());
                        if(data.ip===inputValue && data.status ==="stop"){
                                swal("container已停止&監聽關閉", data.status, "success")
                                client.end();
                        	$.ajax({
                        	    type: "post",
                	            url: dataAPI + '/stopWatch',
        	                    async: true,
	                            data: JSON.stringify({
                        	        idAddress: address
                	            }),
        	                    contentType: "application/json; charset=utf-8",
	                            dataType: "json",
                        	    success: function (data) {
                	                swal("container已停止&監聽關閉", data.status, "success")
        	                    }
	                        });
			}
                    });
                    client.publish("itriAddress/request",JSON.stringify(obj));

                $.ajax({
                    type: "post",
                    url: inputValue + '/stop',
                    async: true,
                    data: JSON.stringify({
                        idAddress: address
                    }),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        swal(inputValue + "的container已停止", data.status, "success");

                        $.ajax({
                            type: "post",
                            url: dataAPI + '/stopWatch',
                            async: true,
                            data: JSON.stringify({
                                idAddress: address
                            }),
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (data) {
                                swal("container已停止&監聽關閉", data.status, "success")
                            }
                        });
                    }
                });
            });
        })
    }





</script>
<script src="bower_components/bootstrap/dist/js/bootstrap.min.js"></script>
<script src="bower_components/jquery-slimscroll/jquery.slimscroll.min.js"></script>
<script src="bower_components/fastclick/lib/fastclick.js"></script>
<script src="dist/js/adminlte.min.js"></script>
<script src="dist/js/demo.js"></script>

</body>

</html>
